import { Unit, Scenario, GlobalSettings } from '../types';

export const sampleUnits: Unit[] = [
  {
    id: 'g-101',
    floor: 'Garden',
    unit: '101',
    planType: '1B',
    sqft: 650,
    basePricePerSqft: 1200,
    orientation: 'NW',
    outdoorSqft: 150,
    bedrooms: 1,
    bathrooms: 1,
    basePrice: 780000,
    finalPrice: 780000,
    finalPricePerSqft: 1200,
    premiums: []
  },
  {
    id: 'g-102',
    floor: 'Garden',
    unit: '102',
    planType: '1B+D',
    sqft: 750,
    basePricePerSqft: 1180,
    orientation: 'NE',
    outdoorSqft: 200,
    bedrooms: 1,
    bathrooms: 1,
    basePrice: 885000,
    finalPrice: 885000,
    finalPricePerSqft: 1180,
    premiums: []
  },
  {
    id: 'g-103',
    floor: 'Garden',
    unit: '103',
    planType: '2B',
    sqft: 950,
    basePricePerSqft: 1150,
    orientation: 'SE',
    outdoorSqft: 220,
    bedrooms: 2,
    bathrooms: 2,
    basePrice: 1092500,
    finalPrice: 1092500,
    finalPricePerSqft: 1150,
    premiums: []
  },
  {
    id: '3-301',
    floor: '3',
    unit: '301',
    planType: '1B',
    sqft: 650,
    basePricePerSqft: 1250,
    orientation: 'NW',
    outdoorSqft: 80,
    bedrooms: 1,
    bathrooms: 1,
    basePrice: 812500,
    finalPrice: 812500,
    finalPricePerSqft: 1250,
    premiums: []
  },
  {
    id: '3-302',
    floor: '3',
    unit: '302',
    planType: '1B+D',
    sqft: 750,
    basePricePerSqft: 1220,
    orientation: 'NE',
    outdoorSqft: 120,
    bedrooms: 1,
    bathrooms: 1,
    basePrice: 915000,
    finalPrice: 915000,
    finalPricePerSqft: 1220,
    premiums: []
  },
  {
    id: '3-303',
    floor: '3',
    unit: '303',
    planType: '2B',
    sqft: 950,
    basePricePerSqft: 1200,
    orientation: 'SE',
    outdoorSqft: 100,
    bedrooms: 2,
    bathrooms: 2,
    basePrice: 1140000,
    finalPrice: 1140000,
    finalPricePerSqft: 1200,
    premiums: []
  },
  {
    id: '4-401',
    floor: '4',
    unit: '401',
    planType: '1B+D',
    sqft: 750,
    basePricePerSqft: 1280,
    orientation: 'SW',
    outdoorSqft: 150,
    bedrooms: 1,
    bathrooms: 1,
    basePrice: 960000,
    finalPrice: 960000,
    finalPricePerSqft: 1280,
    premiums: []
  },
  {
    id: '4-402',
    floor: '4',
    unit: '402',
    planType: '2B',
    sqft: 950,
    basePricePerSqft: 1300,
    orientation: 'SE',
    outdoorSqft: 220,
    bedrooms: 2,
    bathrooms: 2,
    basePrice: 1235000,
    finalPrice: 1235000,
    finalPricePerSqft: 1300,
    premiums: []
  },
  {
    id: '4-403',
    floor: '4',
    unit: '403',
    planType: '2B+D',
    sqft: 1100,
    basePricePerSqft: 1250,
    orientation: 'SW',
    outdoorSqft: 180,
    bedrooms: 2,
    bathrooms: 2,
    basePrice: 1375000,
    finalPrice: 1375000,
    finalPricePerSqft: 1250,
    premiums: []
  },
  {
    id: 'ph-01',
    floor: 'Penthouse',
    unit: '01',
    planType: '2B',
    sqft: 1000,
    basePricePerSqft: 1550,
    orientation: 'NW',
    outdoorSqft: 250,
    bedrooms: 2,
    bathrooms: 2,
    basePrice: 1550000,
    finalPrice: 1550000,
    finalPricePerSqft: 1550,
    premiums: []
  },
  {
    id: 'ph-02',
    floor: 'Penthouse',
    unit: '02',
    planType: '2B+D',
    sqft: 1120,
    basePricePerSqft: 1580,
    orientation: 'SW',
    outdoorSqft: 300,
    bedrooms: 2,
    bathrooms: 2,
    basePrice: 1769600,
    finalPrice: 1769600,
    finalPricePerSqft: 1580,
    premiums: []
  },
  {
    id: 'ph-03',
    floor: 'Penthouse',
    unit: '03',
    planType: '3B',
    sqft: 1300,
    basePricePerSqft: 1600,
    orientation: 'SE',
    outdoorSqft: 280,
    bedrooms: 3,
    bathrooms: 2.5,
    basePrice: 2080000,
    finalPrice: 2080000,
    finalPricePerSqft: 1600,
    premiums: []
  }
];

export const defaultGlobalSettings: GlobalSettings = {
  minPricePerSqft: 1100,
  maxPricePerSqft: 1900,
  roundingRule: 1000
};

export const createBaselineScenario = (): Scenario => {
  const totalRevenue = sampleUnits.reduce((sum, unit) => sum + unit.basePrice, 0);
  
  return {
    id: 'baseline',
    name: 'Baseline Scenario',
    version: '1.0',
    createdBy: 'Developer Admin',
    createdAt: new Date().toISOString(),
    rules: [],
    globalSettings: defaultGlobalSettings,
    units: [...sampleUnits],
    isBaseline: true,
    revenueSummary: {
      totalRevenue,
      deltaFromBaseline: 0,
      deltaPercentage: 0,
      perFloorRevenue: {
        'Garden': sampleUnits.filter(u => u.floor === 'Garden').reduce((sum, u) => sum + u.basePrice, 0),
        '3': sampleUnits.filter(u => u.floor === '3').reduce((sum, u) => sum + u.basePrice, 0),
        '4': sampleUnits.filter(u => u.floor === '4').reduce((sum, u) => sum + u.basePrice, 0),
        'Penthouse': sampleUnits.filter(u => u.floor === 'Penthouse').reduce((sum, u) => sum + u.basePrice, 0),
      },
      perPlanTypeRevenue: {
        '1B': sampleUnits.filter(u => u.planType === '1B').reduce((sum, u) => sum + u.basePrice, 0),
        '1B+D': sampleUnits.filter(u => u.planType === '1B+D').reduce((sum, u) => sum + u.basePrice, 0),
        '2B': sampleUnits.filter(u => u.planType === '2B').reduce((sum, u) => sum + u.basePrice, 0),
        '2B+D': sampleUnits.filter(u => u.planType === '2B+D').reduce((sum, u) => sum + u.basePrice, 0),
        '3B': sampleUnits.filter(u => u.planType === '3B').reduce((sum, u) => sum + u.basePrice, 0),
      },
      unitCountByPriceRange: {
        'Under $1M': sampleUnits.filter(u => u.basePrice < 1000000).length,
        '$1M-$1.5M': sampleUnits.filter(u => u.basePrice >= 1000000 && u.basePrice < 1500000).length,
        '$1.5M-$2M': sampleUnits.filter(u => u.basePrice >= 1500000 && u.basePrice < 2000000).length,
        'Over $2M': sampleUnits.filter(u => u.basePrice >= 2000000).length,
      }
    }
  };
};